// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using app.Data;

#nullable disable

namespace app.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250308174016_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("app.Data.FinancialTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FinancialTransactions");
                });

            modelBuilder.Entity("app.Data.FinancialTransactionPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("FinancialTransactionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Paid")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTransactionId");

                    b.ToTable("FinancialTransactionPayments");
                });

            modelBuilder.Entity("app.Data.FinancialTransactionTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FinancialTransactionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagValueId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTransactionId");

                    b.HasIndex("TagId");

                    b.HasIndex("TagValueId");

                    b.ToTable("FinancialTransactionTags");
                });

            modelBuilder.Entity("app.Data.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tipo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Categoria"
                        });
                });

            modelBuilder.Entity("app.Data.TagValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("TagValues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TagId = 1,
                            Value = "Receita"
                        },
                        new
                        {
                            Id = 2,
                            TagId = 1,
                            Value = "Despesa"
                        },
                        new
                        {
                            Id = 3,
                            TagId = 2,
                            Value = "Salário"
                        },
                        new
                        {
                            Id = 4,
                            TagId = 2,
                            Value = "Bônus e comissões"
                        },
                        new
                        {
                            Id = 5,
                            TagId = 2,
                            Value = "Dividendos"
                        },
                        new
                        {
                            Id = 6,
                            TagId = 2,
                            Value = "Rendimentos de investimentos"
                        },
                        new
                        {
                            Id = 7,
                            TagId = 2,
                            Value = "Aluguel de imóveis"
                        },
                        new
                        {
                            Id = 8,
                            TagId = 2,
                            Value = "Venda de ativos"
                        },
                        new
                        {
                            Id = 9,
                            TagId = 2,
                            Value = "Aluguel"
                        },
                        new
                        {
                            Id = 10,
                            TagId = 2,
                            Value = "Condomínio"
                        },
                        new
                        {
                            Id = 11,
                            TagId = 2,
                            Value = "Energia elétrica"
                        },
                        new
                        {
                            Id = 12,
                            TagId = 2,
                            Value = "Água e esgoto"
                        },
                        new
                        {
                            Id = 13,
                            TagId = 2,
                            Value = "Gás"
                        },
                        new
                        {
                            Id = 14,
                            TagId = 2,
                            Value = "Internet"
                        },
                        new
                        {
                            Id = 15,
                            TagId = 2,
                            Value = "Telefone"
                        },
                        new
                        {
                            Id = 16,
                            TagId = 2,
                            Value = "TV por assinatura e streamings"
                        },
                        new
                        {
                            Id = 17,
                            TagId = 2,
                            Value = "Supermercado"
                        },
                        new
                        {
                            Id = 18,
                            TagId = 2,
                            Value = "Combustível"
                        },
                        new
                        {
                            Id = 19,
                            TagId = 2,
                            Value = "Transporte público"
                        },
                        new
                        {
                            Id = 20,
                            TagId = 2,
                            Value = "Manutenção do carro"
                        },
                        new
                        {
                            Id = 21,
                            TagId = 2,
                            Value = "Seguro saúde"
                        },
                        new
                        {
                            Id = 22,
                            TagId = 2,
                            Value = "Plano de saúde"
                        },
                        new
                        {
                            Id = 23,
                            TagId = 2,
                            Value = "Mensalidade escolar"
                        },
                        new
                        {
                            Id = 24,
                            TagId = 2,
                            Value = "Financiamentos e empréstimos"
                        },
                        new
                        {
                            Id = 25,
                            TagId = 2,
                            Value = "Assinaturas e serviços"
                        },
                        new
                        {
                            Id = 26,
                            TagId = 2,
                            Value = "Alimentação fora de casa"
                        },
                        new
                        {
                            Id = 27,
                            TagId = 2,
                            Value = "Lazer e entretenimento"
                        },
                        new
                        {
                            Id = 28,
                            TagId = 2,
                            Value = "Compras e vestuário"
                        },
                        new
                        {
                            Id = 29,
                            TagId = 2,
                            Value = "Cuidados pessoais"
                        },
                        new
                        {
                            Id = 30,
                            TagId = 2,
                            Value = "Viagens e turismo"
                        },
                        new
                        {
                            Id = 31,
                            TagId = 2,
                            Value = "Hobbies e lazer"
                        },
                        new
                        {
                            Id = 32,
                            TagId = 2,
                            Value = "Presentes e doações"
                        },
                        new
                        {
                            Id = 33,
                            TagId = 2,
                            Value = "Eletrônicos e equipamentos"
                        },
                        new
                        {
                            Id = 34,
                            TagId = 2,
                            Value = "Despesas médicas"
                        },
                        new
                        {
                            Id = 35,
                            TagId = 2,
                            Value = "Reparos e manutenção"
                        },
                        new
                        {
                            Id = 36,
                            TagId = 2,
                            Value = "Multas e taxas extras"
                        });
                });

            modelBuilder.Entity("app.Data.FinancialTransactionPayment", b =>
                {
                    b.HasOne("app.Data.FinancialTransaction", "FinancialTransaction")
                        .WithMany("Payments")
                        .HasForeignKey("FinancialTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialTransaction");
                });

            modelBuilder.Entity("app.Data.FinancialTransactionTag", b =>
                {
                    b.HasOne("app.Data.FinancialTransaction", "FinancialTransaction")
                        .WithMany("Tags")
                        .HasForeignKey("FinancialTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.Data.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.Data.TagValue", "TagValue")
                        .WithMany()
                        .HasForeignKey("TagValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialTransaction");

                    b.Navigation("Tag");

                    b.Navigation("TagValue");
                });

            modelBuilder.Entity("app.Data.TagValue", b =>
                {
                    b.HasOne("app.Data.Tag", "Tag")
                        .WithMany("Values")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("app.Data.FinancialTransaction", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("app.Data.Tag", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
