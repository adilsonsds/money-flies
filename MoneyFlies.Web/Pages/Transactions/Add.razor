@page "/transactions/add"
@using System.Text.Json
@using MoneyFlies.Web.Models

@inject Blazored.LocalStorage.ILocalStorageService localStorage

@inject IJSRuntime JSRuntime
@inject MoneyFlies.Web.Data.MoneyFliesIndexedDb db

<PageTitle>Add</PageTitle>

<h1>Add</h1>

<form method="post" @onsubmit="Submit">
    @* <AntiforgeryToken /> *@

    <div>
        <label>Type</label>
        <InputSelect @bind-Value="Model.Type">
            <option value="@TransactionType.CashInflow">@TransactionType.CashInflow.ToString()</option>
            <option value="@TransactionType.CashOutflow">@TransactionType.CashOutflow.ToString()</option>
        </InputSelect>
    </div>

    <div>
        <label>Payment date</label>
        <InputDate @bind-Value="Model.PaymentDate" />
    </div>

    <div>
        <label>Value</label>
        <InputNumber @bind-Value="Model.Value" @bind-Value:format="N2" />
    </div>

    <div>
        <label>Was paid</label>
        <InputCheckbox @bind-Value="Model.WasPaid" />
    </div>

    <div>
        <label>Description</label>
        <InputText @bind-Value="Model.Description" />
    </div>

    <button type="submit">Submit</button>
</form>

@code {
    Transaction Model = new();

    @* protected override void OnInitialized() => Model ??= new(); *@

    private async Task Submit()
    {
        @* string jsonString = JsonSerializer.Serialize(Model); *@
        @* await localStorage.SetItemAsync("transactions", jsonString); *@
        Console.WriteLine(JsonSerializer.Serialize(Model));
        await db.AddItems<Transaction>(new List<Transaction> { Model });
    }
}