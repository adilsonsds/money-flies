@page "/"
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@using MoneyFlies.Web.Models
@using System.Text.Json

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to MoneyFlies app.

@if (transactions == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
    <thead>
        <tr>
            <th>Type</th>
            <th>Payment Date</th>
            <th>Tags</th>
            <th>Value</th>
            <th>Was paid?</th>
            <th>Description</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var transaction in transactions)
            {
                <tr>
                    <td>@transaction.Type.ToString()</td>
                    <td>@transaction.PaymentDate.ToShortDateString()</td>
                    <td>@transaction.GetTagsDescriptions()</td>
                    <td>@transaction.Value</td>
                    <td>@transaction.WasPaid</td>
                    <td>@transaction.Description</td>
                </tr>
            }
        </tbody>
    </table>
}

<SurveyPrompt Title="How is Blazor working for you?" />

@code {
    private Transaction[]? transactions;

    protected override async Task OnInitializedAsync()
    {
        var transaction = await localStorage.GetItemAsync<string>("transactions");

        transactions = new Transaction[] {
            new Transaction(TransactionType.CashInflow, new DateOnly(2023, 01, 10), 10m, true, "Teste", "Mercado"),
            new Transaction(TransactionType.CashInflow, new DateOnly(2023, 01, 10), 10m, true, "Teste", "Mercado"),
            new Transaction(TransactionType.CashInflow, new DateOnly(2023, 01, 10), 10m, true, "Teste", "Mercado"),
            new Transaction(TransactionType.CashInflow, new DateOnly(2023, 01, 10), 10m, true, "Teste", "Mercado"),
            new Transaction(TransactionType.CashInflow, new DateOnly(2023, 01, 10), 10m, true, "Teste", "Mercado"),
            new Transaction(TransactionType.CashInflow, new DateOnly(2023, 01, 10), 10m, true, "Teste", "Mercado")
        };
        @* await localStorage.SetItemAsync("transactions", "John Smith");
transactions = await localStorage.GetItemAsync<Transaction[]>("transactions"); *@
    }
}